on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: tibdex/github-app-token@v1.7.0
        id: get_installation_token
        with:
          app_id: ${{ secrets.RELEASE_PLEASE_APP_ID }}
          installation_id: ${{ secrets.RELEASE_PLEASE_APP_INSTALLATION_ID }}
          private_key: ${{ secrets.RELEASE_PLEASE_APP_PRIVATE_KEY }}

      - uses: google-github-actions/release-please-action@v3
        id: release_please
        with:
          release-type: go
          token: ${{ steps.get_installation_token.outputs.token }}
          bump-minor-pre-major: true
          package-name: release-please-action
          extra-files: |
            npm/package.json

      - name: Get commit author
        id: commit_author
        run: |
          author=$(gh pr list --search ${{ github.sha }} --state merged --json mergedBy --jq '.[0].mergedBy.login'
          echo "author=${author}" >> $$GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token }}

      - uses: actions/setup-node@v3
        # This sets up the .npmrc file for publishing to npm
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - run: |
          cd npm
          npm config set //registry.npmjs.org/:_authToken=${{ secrets[format('NPM_TOKEN_{0}', steps.commit_author.outputs.author)] || secrets.NPM_TOKEN }}
          npm ci
          otp=$(curl -s \
            -d '{ "packageInfo": { "version": "$(cat package.json | jq -r '.version')", "name": "$(cat package.json | jq -r '.name')" } }' \
            -H "Content-Type: application/json" \
            -X POST \
            https://optic-zf3votdk5a-ew.a.run.app/api/generate/${{ secrets[format('OPTIC_TOKEN_{0}', steps.commit_author.outputs.author)] || secrets.OPTIC_TOKEN }})
          npm publish --otp ${otp} --access public --provenance
